#!/usr/bin/env perl

# This script is used for generating test data when the dist is built

use strict;
use warnings;
use FindBin;       # core
use Archive::Tar;
use File::Find;    # core
use Path::Class 0.24;
use IO::File;      # core
use Data::Dumper ();  # core

my $work_dir = $FindBin::Bin;
my $structs;
my $dists = {
  metafile => {
    dir  => 'Dist-Metadata-Test-MetaFile-2.2',
  },
  nometafile => {
    dir  => 'Dist-Metadata-Test-NoMetaFile-0.1',
  },
  subdir => {
    dir  => 'Dist-Metadata-Test-SubDir-1.5',
    cd   => 'subdir',
  },
  noroot => {
    dir  => '.',
    cd   => 'noroot',
    file => 'noroot.tar.gz',
  },
};

while( my ($name, $dist) = each %$dists ){
  my $tar = Archive::Tar->new;
  my $struct = {};
  my $tgz  = $dist->{file} || $dist->{dir} . '.tar.gz';

  my $wd = $dist->{cd}
    ? dir( $work_dir, $dist->{cd} )
    : $work_dir;
  my $fd = dir( $wd, $dist->{dir} );

  my @files;
  find({
      wanted => sub {
        push @files, $_
          if -f $_;
      },
      no_chdir => 1,
    },
    $fd
  );

  foreach my $file ( @files ){
    my $rel = file($file)->relative($wd);
    my $content = slurp($file);
    $tar->add_data( $rel => $content );
    $struct->{$rel} = $content;
  }

  $tar->write(file($work_dir, $tgz), Archive::Tar::COMPRESS_GZIP());
  $structs->{$name} = $struct;
}

{
  local $Data::Dumper::Indent = 1;
  spit(
    file($work_dir, 'structs.pl'),
    Data::Dumper->Dump( [$structs], ['Dist::Metadata::Test::Structs'] )
  );
}

sub slurp { local $/; IO::File->new($_[0], 'r')->getline }
sub spit  {           IO::File->new($_[0], 'w')->print($_[1]) }
